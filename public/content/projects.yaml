---
header: Projects
tagline: >
  Below you can find some Galaxy-related projects from around the country and
  the world.
footer: ""

projects:
  - title: Galaxy Training Materials
    subtitle: For self-study or use in a classroom setting
    id: gtn
    image: GTN.png
    thumbnail: GTN-thumbnail.png
    keywords: Galaxy, Training
    url: https://training.galaxyproject.org
    description:
      - paragraph: blabla
      - image: GTN.png

  - title: MyFAIR
    subtitle: FAIR data Galaxy integration
    id: myfair
    image: fairdata.png
    thumbnail: fairdata_thumbnail.png
    keywords: Galaxy, FAIR data, Web Development
    url: https://github.com/ErasmusMC-Bioinformatics/myFAIR
    description:
      - paragraph: >
          MyFAIR Analysis is a web application designed to allow scientists to
          create FAIR data, and to provide FAIR data analysis such that the
          “end to end” analysis complies with FAIR data principles. MyFAIR
          analysis is a python application and graphical user interface (GUI)
          that uses Galaxy2 for analytical workflows and B2DROP3(EUDAT) for FAIR
          data storage.  Our proof of concept to test myFAIR analysis uses the
          genome in a bottle trio-samples available from galaxy training for
          genetic variation analysis.
      - image: myfair.png

  - title: galaxy-docker-ansible
    subtitle: Easy deployment of a galaxy server
    id: gda
    url: https://github.com/LUMC/galaxy-docker-ansible
    keywords: Galaxy, ansible, docker, deployment
    description:
      - paragraph: >
          Galaxy-docker-ansible aims to make galaxy deployment easy. Galaxy
          is already distributed in a
          <a href="https://github.com/bgruening/docker-galaxy-stable">docker
          image</a> which has all the necessary services included, but still
          requires quite some time to configure. Galaxy-docker-ansible provides
          easy to understand yaml files to configure your galaxy server. After
          the configuration step, a galaxy server can be started by running just
          two commands.


# ansible playbook
# EGA connection
